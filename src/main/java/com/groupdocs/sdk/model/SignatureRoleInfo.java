/**
 *  Copyright 2012 GroupDocs.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.groupdocs.sdk.model;

/**
 * 
 * <p>
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */
public class SignatureRoleInfo {
  private String id = null;
  private String name = null;
  private Integer canEdit = null;
  private Integer canSign = null;
  private Integer canAnnotate = null;
  private Integer canDelegate = null;
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  public Integer getCanEdit() {
    return canEdit;
  }
  public void setCanEdit(Integer canEdit) {
    this.canEdit = canEdit;
  }

  public Integer getCanSign() {
    return canSign;
  }
  public void setCanSign(Integer canSign) {
    this.canSign = canSign;
  }

  public Integer getCanAnnotate() {
    return canAnnotate;
  }
  public void setCanAnnotate(Integer canAnnotate) {
    this.canAnnotate = canAnnotate;
  }

  public Integer getCanDelegate() {
    return canDelegate;
  }
  public void setCanDelegate(Integer canDelegate) {
    this.canDelegate = canDelegate;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignatureRoleInfo {\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  canEdit: ").append(canEdit).append("\n");
    sb.append("  canSign: ").append(canSign).append("\n");
    sb.append("  canAnnotate: ").append(canAnnotate).append("\n");
    sb.append("  canDelegate: ").append(canDelegate).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}

